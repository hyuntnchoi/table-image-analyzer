- 읽기 전:
    opencv의 다양한 기능에 대해 알지 못할 때라 단순히 픽셀값을
    일일이 분석하여 복잡한 코드다
    opencv의 다양한 함수를 통해 사각형을 바로 인식했으면 훨씬 더 
    좋았을 것 같다.

===
- 만든 목적: 
    JavaScript Canvas를 이용해 이미지를 그렸었는데 생산성에 
    한계를 느껴서 다른 방법을 생각하던 중 일부 단계에서 필요한 
    과정을 자동으로 하고자 Python의 opencv 라이브러리를 활용해 
    자동으로 표 형태의 이미지를 분석하기 위해
    
- 그럼 무엇을 분석하는가?
    표의 시작 점 좌표, 행 별 높이, 행 별 컬럼 너비 등

- 프로그램 작동 알고리즘:
    1. 첫번째 픽셀 발견 -> 
    2. x+1, y도 흰색이 아니면 -> x, y 저장 (row1(x,y))
    3. 같은 x의 y를 1씩 더하면서 검색 -> x, y 저장 (row2(x,y)), (row3(x,y)) ...
    4. y가 흰색이 뜨면 종료

    ===

    [위에 저장된 로우별로 컬럼 확인]
    x+5부터 시작
    while ( x/y가 흰색이 아니면 )
      x+5, y+1 색깔 체크
      x+5, y+2 색깔 체크
      x+5, y+3 색깔 체크
      x+5, y+4 색깔 체크
      then col1(x,y) 저장 (저장된 경우 x +2를 해주고, 없는경우는 x+1로 노말하게 진행)
      x+6, y+1 색깔 체크
      x+6, y+2 색깔 체크
      ..
